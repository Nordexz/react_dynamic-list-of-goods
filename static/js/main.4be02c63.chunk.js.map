{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","map","good","name","id","color","style","getAll","fetch","then","response","ok","json","Promise","reject","Error","statusText","App","useState","setGoods","isError","setIsError","isLoading","setIsLoading","getGoods","useCallback","promise","a","className","type","onClick","sort","firstGood","secondGood","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"8PAOaA,EAA6BC,IAAMC,MAC9C,gBAAGC,EAAH,EAAGA,MAAH,OACE,6BACGA,EAAMC,KAAI,SAAAC,GACT,IAAQC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,GAAIC,EAAUH,EAAVG,MAElB,OACE,oBAEE,UAAQ,OACRC,MAAO,CAAED,SAHX,SAKGF,GAJIC,WCVV,SAASG,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,OAAKA,EAASC,GAMPD,EAASE,OALPC,QAAQC,OACb,IAAIC,MAAML,EAASM,gBAQtB,ICXMC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOlB,EAAP,KAAcmB,EAAd,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAEMC,EAAWC,sBAAW,uCAAC,WAAOC,GAAP,SAAAC,EAAA,6DAC3BJ,GAAa,GADc,cAIzBJ,EAJyB,SAIVO,EAJU,kFAMzBL,GAAW,GANc,yBAQzBE,GAAa,GARY,4EAAD,sDAUzB,IAEH,OACE,sBAAKK,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMN,EAASjB,MAH1B,4BAQA,wBACEsB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMN,EDpBdjB,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZ+B,MAAK,SAACC,EAAWC,GAAZ,OACJD,EAAU7B,KAAK+B,cAAcD,EAAW9B,SAEzCgC,MAAM,EAAG,QCYV,gCAQA,wBACEN,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMN,EDnBdjB,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAMoC,QAAO,SAAAlC,GAAI,MAAmB,QAAfA,EAAKG,cCevC,4BAQCiB,EACG,8CAEA,qCACGF,GACC,qDAGF,cAACvB,EAAD,CAAWG,MAAOA,WCzD9BqC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4be02c63.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(\n  ({ goods }) => (\n    <ul>\n      {goods.map(good => {\n        const { name, id, color } = good;\n\n        return (\n          <li\n            key={id}\n            data-cy=\"good\"\n            style={{ color }}\n          >\n            {name}\n          </li>\n        );\n      })}\n    </ul>\n  ),\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          new Error(response.statusText),\n        );\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((firstGood, secondGood) => (\n        firstGood.name.localeCompare(secondGood.name)\n      ))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getGoods = useCallback(async (promise: Promise<Good[]>) => {\n    setIsLoading(true);\n\n    try {\n      setGoods(await promise);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => getGoods(getAll())}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => getGoods(get5First())}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => getGoods(getRedGoods())}\n      >\n        Load red goods\n      </button>\n\n      {isLoading\n        ? <p>Is Loading...</p>\n        : (\n          <>\n            {isError && (\n              <p>Something went wrong</p>\n            )}\n\n            <GoodsList goods={goods} />\n          </>\n        )}\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}